<?php

namespace AppBundle\Repository;

/**
 * ScoreRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScoreRepository extends \Doctrine\ORM\EntityRepository
{
    public function getScoreByEvaluationIdAndCandidatId($evanuationId, $candidatId)
    {
        $qb = $this->createQueryBuilder('s')
        ->select('s.id')

        ->leftJoin('e.author', 'a')
        ->leftJoin('e.difficulty', 'd')
        ->leftJoin('e.status', 's')
        ->leftJoin('e.questions', 'q')
        ->leftJoin('q.topic', 't')
        ->leftJoin('q.level', 'l')
        ->where('e.id = :id')
        ->setParameter(':id', $id, \PDO::PARAM_INT)
        ->orderBy('t.name', 'ASC')
        ->addOrderBy('l.name', 'ASC');
         
        return $qb->getQuery()->getSingleResult();
    }

    /**
     * @param \AppBundle\Entity\User $user
     * @param \AppBundle\Entity\Evaluation $evaluation
     * @return mixed
     */
    public function getUserFinalScore(\AppBundle\Entity\User $user, \AppBundle\Entity\Evaluation $evaluation)
    {
        $q = $this->createQueryBuilder('s')
            ->innerJoin('s.user', 'u')
            ->leftJoin('s.evaluation', 'e')
            ->where('s.user = :user')
            ->andWhere('s.evaluation = :evaluation')
            ->setParameter('user', $user)
            ->setParameter('evaluation', $evaluation)
            ->select('SUM(s.score) as score', 'SUM(s.time) as time');

        return $q->getQuery()->getSingleResult();
    }


}